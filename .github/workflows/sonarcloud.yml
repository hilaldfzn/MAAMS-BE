name: SonarCloud

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: "pip"
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
      - name: Cache Python virtual environment
        uses: actions/cache@v3
        with:
            path: .venv
            key: ${{ runner.os }}-python-${{ hashFiles('requirements.txt') }}
            restore-keys: ${{ runner.os }}-python
      - name: Set environment variables
        run: |
          echo "ENVIRONMENT=${{ secrets.ENVIRONMENT }}" >> $GITHUB_ENV
          echo "HOST_FE=${{ secrets.HOST_FE }}" >> $GITHUB_ENV
          echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> $GITHUB_ENV
          echo "SENTRY_DSN=${{ secrets.SENTRY_DSN }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          coverage run --source=. manage.py test
      - name: Generate HTML coverage report
        run: |
          source .venv/bin/activate
          coverage html
      - name: Generate XML coverage report
        run: |
          source .venv/bin/activate
          coverage xml -o coverage.xml
      - name: Run SonarCloud analysis
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
            args:
                -Dsonar.projectKey=hilaldfzn_MAAMS-BE
                -Dsonar.organization=hilaldfzn
                -Dsonar.sources=.
                -Dsonar.exclusions=**/tests/**,test*,*test*
                -Dsonar.tests=authentication/tests,validator/tests
                -Dsonar.host.url=https://sonarcloud.io
      - name: Upload coverage report artifact (optional)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: htmlcov/